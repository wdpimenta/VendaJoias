/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ifirst.karine;

import br.ifirst.karine.consultas.FrmConsultaCliente;
import br.ifirst.karine.daos.ClienteDao;
import br.ifirst.karine.entities.Cliente;
import br.ifirst.karine.utils.Util;
import br.ifirst.karine.utils.UtilValidaDocumento;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Wanderson
 */
public class FrmCliente extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    private final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    private final int RET_OK = 1;

    private final ClienteDao clienteDao = new ClienteDao();
    private Cliente clienteTemp;

    /**
     * Creates new form FrmCliente
     *
     * @param parent
     * @param modal
     */
    public FrmCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        fieldCnpj.requestFocus();
        this.setLocationRelativeTo(parent);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });

    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fieldCodigo = new javax.swing.JTextField();
        fieldNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        fieldCnpj = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldRg = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fieldEndereco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fieldBairro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fieldCidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fieldEstado = new javax.swing.JComboBox();
        fieldTelefone = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        fieldCelular = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fieldEmail = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLblMessage = new javax.swing.JLabel();
        excluirButton = new javax.swing.JButton();
        fieldCep = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        limparButton = new javax.swing.JButton();

        setTitle("Cadastro de cliente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        okButton.setText("Salvar");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Código");

        fieldCodigo.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(9)
        );
        fieldCodigo.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        fieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldCodigoKeyPressed(evt);
            }
        });

        fieldNome.setDocument(new br.ifirst.karine.utils.FieldLimitNoCharSpecial(100, true)
        );
        fieldNome.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel3.setText("Nome");

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        fieldCnpj.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(14));
        fieldCnpj.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel4.setText("CPF / CNPJ");

        fieldRg.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(15));
        fieldRg.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel5.setText("RG / INSC EST");

        fieldEndereco.setDocument(new br.ifirst.karine.utils.FieldLimitNoCharSpecial(150, true));
        fieldEndereco.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel7.setText("Endereço");

        fieldBairro.setDocument(new br.ifirst.karine.utils.FieldLimitNoCharSpecial(60, true));
        fieldBairro.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel8.setText("Bairro");

        fieldCidade.setDocument(new br.ifirst.karine.utils.FieldLimitNoCharSpecial(60, true));
        fieldCidade.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel9.setText("Cidade");

        jLabel10.setText("UF");

        fieldEstado.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        fieldEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GO", "SC" }));
        fieldEstado.setSelectedIndex(1);

        fieldTelefone.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(11));
        fieldTelefone.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel11.setText("Telefone");

        fieldCelular.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(11));
        fieldCelular.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel12.setText("Celular");

        fieldEmail.setDocument(new br.ifirst.karine.utils.FieldLimit(255, false));
        fieldEmail.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel13.setText("E-mail");

        excluirButton.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        excluirButton.setText("Excluir");
        excluirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirButtonActionPerformed(evt);
            }
        });

        fieldCep.setDocument(new br.ifirst.karine.utils.FieldLimitNumber(11));
        fieldCep.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel14.setText("CEP");

        limparButton.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        limparButton.setText("Novo");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel13))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldEmail)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(fieldBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(fieldEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(fieldCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(fieldRg)))
                            .addComponent(fieldNome)
                            .addComponent(fieldEndereco, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limparButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluirButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(fieldCep, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldTelefone)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(fieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, excluirButton, limparButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fieldRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12))
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(6, 6, 6)
                .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(jLblMessage)
                    .addComponent(excluirButton)
                    .addComponent(limparButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, fieldBairro, fieldCelular, fieldCep, fieldCidade, fieldCnpj, fieldCodigo, fieldEmail, fieldEndereco, fieldEstado, fieldNome, fieldRg, fieldTelefone, jButton1, jLblMessage, okButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        doValidaDadosAndSave();

        //doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void fieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCodigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            long aLong = Util.getLong(fieldCodigo);
            if (aLong > 0) {
                doLimparTela();
                clienteTemp = clienteDao.find(aLong);

                if (clienteTemp != null) {
                    doPreencheForm(clienteTemp);
                } else {
                    JOptionPane.showMessageDialog(this, String.format("Cliente com o código [%s] infromado não encotrando", aLong));
                }

            }
        }
    }//GEN-LAST:event_fieldCodigoKeyPressed

    private void excluirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirButtonActionPerformed
        doExcluir();
    }//GEN-LAST:event_excluirButtonActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed

        int showInternalConfirmDialog = JOptionPane.showConfirmDialog(this, "Deseja limpar tela", "limpar", JOptionPane.OK_CANCEL_OPTION);

        if (showInternalConfirmDialog == JOptionPane.OK_OPTION) {
            doLimparTela();
        }

    }//GEN-LAST:event_limparButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FrmConsultaCliente frmConsultaCliente = new FrmConsultaCliente(this, true);
        frmConsultaCliente.setVisible(true);

        if (frmConsultaCliente.getReturnStatus() == FrmConsultaCliente.RET_OK) {
            clienteTemp = frmConsultaCliente.getClienteSelecionado();
            doPreencheForm(clienteTemp);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton excluirButton;
    private javax.swing.JTextField fieldBairro;
    private javax.swing.JTextField fieldCelular;
    private javax.swing.JTextField fieldCep;
    private javax.swing.JTextField fieldCidade;
    private javax.swing.JTextField fieldCnpj;
    private javax.swing.JTextField fieldCodigo;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldEndereco;
    private javax.swing.JComboBox fieldEstado;
    private javax.swing.JTextField fieldNome;
    private javax.swing.JTextField fieldRg;
    private javax.swing.JTextField fieldTelefone;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblMessage;
    private javax.swing.JButton limparButton;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

    private void doSalvarCliente(Cliente c) {
        if (c.getId() > 0) {
            clienteDao.edit(c);
        } else {
            c.setId(null);
            clienteDao.create(c);
            doPreencheForm(c);
        }

        JOptionPane.showMessageDialog(this, "Dados salvos com sucesso");
        doLimparTela();
    }

    private void doValidaDadosAndSave() {

        boolean isErro = false;
        StringBuilder sb = new StringBuilder("Erros no cadastro de cliente");

        long id = Util.getLong(fieldCodigo);

        Cliente c = new Cliente();

        c.setNome(fieldNome.getText().trim());
        c.setCnpjCpf(fieldCnpj.getText().trim());
        c.setRgInscEst(fieldRg.getText().trim());
        c.setEndereco(fieldEndereco.getText().trim());
        c.setBairro(fieldBairro.getText().trim());
        c.setCidade(fieldCidade.getText().trim());
        c.setCep(fieldCep.getText().trim());
        c.setUf(String.valueOf(fieldEstado.getSelectedItem()).trim());
        c.setTelefone(fieldTelefone.getText().trim());
        c.setCelular(fieldCelular.getText().trim());
        c.setEmail(fieldEmail.getText().trim());
        c.setId(id);

        if (!c.getCnpjCpf().trim().isEmpty()) {
            if (!UtilValidaDocumento.isValidDocumento(c.getCnpjCpf())) {
                sb.append("\n").append(String.format("Campo CNPJ ou CPF não informado ou não válido [%s]", c.getCnpjCpf()));
                isErro = true;
            }
        }

//        if (c.getRgInscEst().isEmpty() || c.getRgInscEst().length() < 3) {
//            sb.append("\n").append(String.format("Campo RG ou Insc. Est. do cliente não informado ou menor que 3 digitos [%s]", c.getRgInscEst()));
//            isErro = true;
//        }
        if (c.getNome().isEmpty() || c.getNome().length() < 3) {
            sb.append("\n").append(String.format("Campo Nome do cliente não informado ou menor que 3 digitos [%s]", c.getNome()));
            isErro = true;
        }
//        if (c.getEndereco().isEmpty() || c.getEndereco().length() < 3) {
//            sb.append("\n").append(String.format("Campo Endereço do cliente não informado ou menor que 3 digitos [%s]", c.getEndereco()));
//            isErro = true;
//        }
//        if (c.getBairro().isEmpty() || c.getBairro().length() < 3) {
//            sb.append("\n").append(String.format("Campo Bairro do cliente não informado ou menor que 3 digitos [%s]", c.getBairro()));
//            isErro = true;
//        }
//        if (c.getCidade().isEmpty() || c.getCidade().length() < 3) {
//            sb.append("\n").append(String.format("Campo Cidade do cliente não informado ou menor que 3 digitos [%s]", c.getCidade()));
//            isErro = true;
//        }
//        if ((c.getTelefone().isEmpty() && c.getCelular().isEmpty()) || (c.getTelefone().length() < 10 && c.getCelular().length() < 10)) {
//            sb.append("\n").append(String.format("Campo Telefone ou Celular do cliente não informado ou menor que 10 digitos [%s] [%s]", c.getCelular(), c.getTelefone()));
//            isErro = true;
//        }
//        if (c.getEmail().isEmpty() || c.getEmail().length() < 10) {
//            sb.append("\n").append(String.format("Campo Email do cliente não informado ou menor que 10 digitos [%s]", c.getEmail()));
//            isErro = true;
//        }
//        if (c.getCep().isEmpty() || c.getCep().length() < 8) {
//            sb.append("\n").append(String.format("Campo Cep do cliente não informado ou menor que 8 digitos [%s]", c.getCep()));
//            isErro = true;
//        }

        if (isErro) {
            JOptionPane.showMessageDialog(this, sb.toString());
        } else {
            doSalvarCliente(c);
        }
    }

    private void doPreencheForm(Cliente c) {
        fieldNome.setText(c.getNome());

        fieldRg.setText(c.getRgInscEst());
        fieldEndereco.setText(c.getEndereco());
        fieldBairro.setText(c.getBairro());
        fieldCidade.setText(c.getCidade());
        fieldCep.setText(c.getCep());
        fieldEstado.setSelectedItem(c.getUf());
        fieldCelular.setText(c.getCelular());
        fieldEmail.setText(c.getEmail());
        fieldCodigo.setText(String.valueOf(c.getId()));

        fieldCnpj.setText(c.getCnpjCpf());
        fieldTelefone.setText(c.getTelefone());

    }

    private void doLimparTela() {

        fieldNome.setText("");

        fieldRg.setText("");
        fieldEndereco.setText("");
        fieldBairro.setText("");
        fieldCidade.setText("");
        fieldCep.setText("");
        fieldEstado.setSelectedIndex(0);
        fieldCelular.setText("");
        fieldEmail.setText("");
        fieldCodigo.setText("");

        fieldCnpj.setText("");
        fieldTelefone.setText("");

        clienteTemp = null;

    }

    private void doExcluir() {
        int showInternalConfirmDialog = JOptionPane.showConfirmDialog(this, "Deseja excluir cadastro", "excluir", JOptionPane.OK_CANCEL_OPTION);

        if (showInternalConfirmDialog == JOptionPane.OK_OPTION) {
            long id = Util.getLong(fieldCodigo);
            clienteDao.remove(new Cliente(id));
            doLimparTela();
            JOptionPane.showMessageDialog(this, "Cliente excluido com sucesso");
        }
    }
}
