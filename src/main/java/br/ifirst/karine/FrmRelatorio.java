/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ifirst.karine;

import br.ifirst.karine.daos.PedidoDao;
import br.ifirst.karine.entities.EStatus;
import br.ifirst.karine.entities.Pedido;
import br.ifirst.karine.tables.TablePedido;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author Wanderson
 */
public class FrmRelatorio extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    private final PedidoDao pedidoDao = new PedidoDao();
    private IPedido listenerPedido;
    private final List<Pedido> pedidos = new ArrayList<>();

    /**
     * Creates new form FrmRelatorio
     *
     * @param parent
     * @param modal
     */
    public FrmRelatorio(java.awt.Frame parent, boolean modal) {
        this(parent, null, modal);
    }

    public FrmRelatorio(java.awt.Frame parent, IPedido listenerPedido, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocationRelativeTo(parent);
        this.listenerPedido = listenerPedido;

        List<Pedido> findRange = pedidoDao.findRange(new int[]{0, 10});

        if (findRange != null) {
            fieldPedidos.setModel(new TablePedido(findRange, null));
        }

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    public List<Pedido> getPedidos() {
        return pedidos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldPedidos = new javax.swing.JTable();
        okFinalizar = new javax.swing.JButton();
        okExcluirPedido = new javax.swing.JButton();
        okReabrir = new javax.swing.JButton();

        setTitle("Relat√≥rio de pedidos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        okButton.setText("Imprimir");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        fieldPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pedido", "Cliente", "Valor", "Desconto"
            }
        ));
        fieldPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fieldPedidos);

        okFinalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        okFinalizar.setText("Finalizar");
        okFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okFinalizarActionPerformed(evt);
            }
        });

        okExcluirPedido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        okExcluirPedido.setText("Excluir");
        okExcluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okExcluirPedidoActionPerformed(evt);
            }
        });

        okReabrir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        okReabrir.setText("Reabrir");
        okReabrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okReabrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okReabrir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okExcluirPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {okButton, okExcluirPedido, okFinalizar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(okFinalizar)
                    .addComponent(okExcluirPedido)
                    .addComponent(okReabrir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        TablePedido model = (TablePedido) fieldPedidos.getModel();

        int[] selectedRows = fieldPedidos.getSelectedRows();

        for (int selectedRow : selectedRows) {
            pedidos.add(model.get(selectedRow));
        }

        doClose(RET_OK);

    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void okFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okFinalizarActionPerformed
        TablePedido model = (TablePedido) fieldPedidos.getModel();

        int[] selectedRows = fieldPedidos.getSelectedRows();
        for (int selectedRow : selectedRows) {

            Pedido p = model.get(selectedRow);
            p.setStatus(EStatus.FECHADO);
            pedidoDao.edit(p);
            model.update(p);

        }
    }//GEN-LAST:event_okFinalizarActionPerformed

    private void okExcluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okExcluirPedidoActionPerformed
        TablePedido model = (TablePedido) fieldPedidos.getModel();

        int[] selectedRows = fieldPedidos.getSelectedRows();
        for (int selectedRow : selectedRows) {

            Pedido p = model.get(selectedRow);
            pedidoDao.remove(p);
            model.remove(selectedRow);

        }
    }//GEN-LAST:event_okExcluirPedidoActionPerformed

    private void okReabrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okReabrirActionPerformed
        TablePedido model = (TablePedido) fieldPedidos.getModel();

        int[] selectedRows = fieldPedidos.getSelectedRows();
        for (int selectedRow : selectedRows) {

            Pedido p = model.get(selectedRow);
            p.setStatus(EStatus.ABERTO);
            pedidoDao.edit(p);
            model.update(p);

        }
    }//GEN-LAST:event_okReabrirActionPerformed

    private void fieldPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldPedidosMouseClicked
        if (evt.getClickCount() == 2) {
            if (listenerPedido != null) {
                int selectedRow = fieldPedidos.getSelectedRow();
                if (selectedRow > -1) {
                    TablePedido t = (TablePedido) fieldPedidos.getModel();
                    listenerPedido.selectedPedido(t.get(selectedRow));
                    doClose(returnStatus);
                }
            }
        }
    }//GEN-LAST:event_fieldPedidosMouseClicked

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);

        dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable fieldPedidos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton okExcluirPedido;
    private javax.swing.JButton okFinalizar;
    private javax.swing.JButton okReabrir;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
